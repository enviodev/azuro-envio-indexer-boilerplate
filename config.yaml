name: azuro
contracts:
  - name: Core
    handler: src/v1/core.ts
    events:
      - event: ConditionCreated(uint256 indexed oracleConditionId, uint256 indexed conditionId, uint64 timestamp)
        isAsync: true
      - event: ConditionResolved(uint256 indexed oracleConditionId, uint256 indexed conditionId, uint64 outcomeWin, uint8 state, uint256 amountForLp)
      - event: ConditionShifted(uint256 oracleCondId, uint256 conditionId, uint64 newTimestamp)
      - event: ConditionStopped(uint256 indexed conditionId, bool flag)
      - event: LpChanged(address indexed newLp)
        isAsync: true
  - name: LP
    handler: src/v1/lp.ts
    events:
      - event: BetterWin(address indexed better, uint256 tokenId, uint256 amount)
      - event: LiquidityAdded(address indexed account, uint256 amount, uint48 leaf)
      - event: LiquidityRemoved(address indexed account, uint48 indexed leaf, uint256 amount)
      - event: LiquidityRequested(address indexed requestWallet, uint256 requestedValueLp)
      - event: NewBet(address indexed owner, uint256 indexed betId, uint256 indexed conditionId, uint64 outcomeId, uint128 amount, uint256 odds, uint128 fund1, uint128 fund2)
      - event: Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
      - event: WithdrawTimeoutChanged(uint64 newWithdrawTimeout)
  - name: XYZFreeBet
    handler: src/v1/freebet.ts
    events:
      - event: BettorWin(address bettor, uint256 azuroBetId, uint128 amount)
      - event: FreeBetMinted(address indexed receiver, uint256 indexed id, (uint128,uint64,uint64) bet)
        isAsync: true
      - event: FreeBetMintedBatch(address[] receivers, uint256[] ids, (uint128,uint64,uint64)[] bets)
        isAsync: true
      - event: FreeBetRedeemed(address indexed bettor, uint256 indexed id, uint256 indexed azuroBetId, uint128 amount)
      - event: FreeBetReissued(address indexed receiver, uint256 indexed id, (uint128,uint64,uint64) bet)
      - event: Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
  - name: Azurobets
    handler: src/v1/azurobets.ts
    events:
      - event: Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
  - name: Corev2
    handler: src/v2/core.ts
    events:
      - event: ConditionCreated(uint256 indexed gameId, uint256 indexed conditionId)
      - event: ConditionResolved(uint256 indexed conditionId, uint8 state, uint64 outcomeWin, int128 lpProfit)
      - event: ConditionStopped(uint256 indexed conditionId, bool flag)
      - event: NewBet(address indexed  bettor, address indexed affiliate, uint256 indexed conditionId, uint256 tokenId, uint64 outcomeId, uint128 amount, uint64 odds, uint128[2] funds)
      - event: OddsChanged(uint256 indexed conditionId, uint64[2] newOdds)
  - name: Expressv2
    handler: src/v2/express.ts
    events:
      - event: NewBet(address indexed bettor, uint256 indexed betId,(address,uint64,uint128,uint48,bool,(uint256,uint64)[] ,uint64[]) bet) # interesting stress test - struct within struct event emit
      - event: Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
  - name: LPv2
    handler: src/v2/lp.ts
    events:
      - event: BettorWin(address indexed core, address indexed bettor, uint256 tokenId, uint256 amount)
      - event: GameCanceled(uint256 indexed gameId)
      - event: GameShifted(uint256 indexed gameId, uint64 newStart)
      - event: LiquidityAdded(address indexed account, uint48 indexed depositId, uint256 amount)
      - event: LiquidityDonated(address indexed account, uint48 indexed depositId, uint256 amount)
      - event: LiquidityManagerChanged(address newLiquidityManager)
      - event: LiquidityRemoved(address indexed account, uint48 indexed depositId, uint256 amount)
      - event: NewGame(uint256 indexed gameId, bytes32 ipfsHash, uint64 startsAt) # TODO: This only imported v3 not v2 version which seems to be the same contract
      - event: Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
      - event: WithdrawTimeoutChanged(uint64 newWithdrawTimeout)
  - name: Factory
    handler: src/v2/factory.ts
    events:
      - event: NewCore(address indexed lp, address indexed core, string indexed coreType)
      - event: NewPool(address indexed lp, address indexed core, string indexed coreType, address access)
  - name: FreeBet
    handler: src/v2/freebet.ts
    events:
      - event: BettorWin(address indexed core, address indexed bettor, uint256 indexed azuroBetId, uint128 amount)
      - event: FreeBetMinted(address indexed receiver, uint256 indexed id, (uint128,uint64,uint64) bet)
      - event: FreeBetMintedBatch(address[] receivers, uint256[] ids, (uint128,uint64,uint64)[] bets)
      - event: FreeBetRedeemed(address indexed core, address indexed bettor, uint256 indexed id, uint256 azuroBetId, uint128 amount)
      - event: FreeBetReissued(address indexed receiver, uint256 indexed id, (uint128,uint64,uint64) bet)
      - event: Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
  - name: Corev3
    handler: src/v3/core.ts
    events:
      - event: ConditionCreated(uint256 indexed gameId, uint256 indexed conditionId, uint64[] outcomes)
      - event: ConditionResolved(uint256 indexed conditionId, uint8 state, uint64[] winningOutcomes, int128 lpProfit)
      - event: ConditionStopped(uint256 indexed conditionId, bool flag)
      - event: NewBet( address indexed bettor,  address indexed affiliate, uint256 indexed conditionId, uint256 tokenId, uint64 outcomeId, uint128 amount, uint256 odds, uint128[] funds)
      - event: OddsChanged(uint256 indexed conditionId, uint256[] newOdds)
      - event: MarginChanged(uint256 indexed conditionId, uint64 newMargin)
      - event: ReinforcementChanged(uint256 indexed conditionId, uint128 newReinforcement)
  - name: Expressv3
    handler: src/v3/express.ts
    events:
      - event: NewBet( address indexed bettor, uint256 indexed betId, (address,uint64,uint128,uint48,bool,(uint256,uint64)[] ,uint64[]) bet)
      - event: Transfer( address indexed from,  address indexed to, uint256 indexed tokenId)
  - name: FreeBetv3
    handler: src/v3/freebet.ts
    events:
      - event: NewBet(uint256 indexed freeBetId,address indexed core,address indexed bettor,uint256 azuroBetId,uint128 amount,uint64 minOdds,uint64 expiresAt)
      - event: BettorWin(address indexed core,address indexed bettor,uint256 indexed freeBetId,uint256 amount)
      - event: PayoutsResolved(uint256[] azuroBetId)
  - name: LiveCorev1
    handler: src/livecore/livecore.ts
    events:
      - event: ConditionCreated(uint256 indexed gameId, uint256 indexed conditionId, uint64[] outcomes, uint256[] odds, uint8 winningOutcomesCount)
      - event: ConditionResolved(uint256 indexed conditionId, uint8 state, uint64[] winningOutcomes, int128 lpProfit, uint64 settledAt)
      - event: NewLiveBet( address indexed bettor,  address indexed affiliate, uint256 indexed conditionId, uint256 tokenId, uint64 outcomeId, uint128 amount, uint64 odds, uint128 payoutLimit)
  - name: FreeBetFactory
    handler: src/v3/freebetFactory.ts
    events:
      - event: NewFreeBet(address indexed freeBetAddress, address indexed lpAddress, address affiliate, address manager)
networks:
  - id: 100
    start_block: 0
    contracts:
      - name: Core
        address:
          - 0x4fE6A9e47db94a9b2a4FfeDE8db1602FD1fdd37d
      - name: LP
      - name: Azurobets # load dynamic contract with async smart contract call
      - name: XYZFreeBet
        address:
          - 0xf0A93Ad0184cF1e5f29d7b5579358C99b9010F17
      - name: Factory
        address:
          - 0x8EA1a7241537F10fa73363FDC6380F3FC8619c03
      - name: LPv2
      - name: FreeBet
        address:
          - 0xB425E555492eE36c5A2918481EbbcF04AE73682b
      - name: Corev2
      - name: Expressv2
      - name: FreeBetFactory
        address:
          - 0x00a7629689073BF8F343DE80FBbC34425131b3e5
      - name: Corev3
      - name: Expressv3
      - name: FreeBetv3
      - name: LiveCorev1
